// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using webapi;

#nullable disable

namespace webapi.Migrations
{
    [DbContext(typeof(ContactsDatabaseContext))]
    [Migration("20230324213743_Contacts_dev2")]
    partial class Contacts_dev2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.4");

            modelBuilder.Entity("webapi.Models.Contact", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly>("DateOfBirth")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long?>("SubcategoryId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("SubcategoryId");

                    b.ToTable("Contacts");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CategoryId = 1L,
                            DateOfBirth = new DateOnly(1989, 1, 1),
                            Email = "johnsmith@email.xyz",
                            FirstName = "John",
                            LastName = "Smith",
                            Password = "password1",
                            PhoneNumber = "111222333"
                        },
                        new
                        {
                            Id = 2L,
                            CategoryId = 2L,
                            DateOfBirth = new DateOnly(1991, 8, 10),
                            Email = "shellkim@email.xyz",
                            FirstName = "Shell",
                            LastName = "Kim",
                            Password = "password2",
                            PhoneNumber = "123456789",
                            SubcategoryId = 1L
                        });
                });

            modelBuilder.Entity("webapi.Models.ContactCategory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Name = "Private"
                        },
                        new
                        {
                            Id = 2L,
                            Name = "Business"
                        },
                        new
                        {
                            Id = 3L,
                            Name = "Other"
                        });
                });

            modelBuilder.Entity("webapi.Models.ContactSubcategory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(2L);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Subcategories");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CategoryId = 0L,
                            Name = "CEO"
                        },
                        new
                        {
                            Id = 2L,
                            CategoryId = 0L,
                            Name = "Client"
                        });
                });

            modelBuilder.Entity("webapi.Models.Contact", b =>
                {
                    b.HasOne("webapi.Models.ContactCategory", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("webapi.Models.ContactSubcategory", "Subcategory")
                        .WithMany()
                        .HasForeignKey("SubcategoryId");

                    b.Navigation("Category");

                    b.Navigation("Subcategory");
                });

            modelBuilder.Entity("webapi.Models.ContactSubcategory", b =>
                {
                    b.HasOne("webapi.Models.ContactCategory", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });
#pragma warning restore 612, 618
        }
    }
}
